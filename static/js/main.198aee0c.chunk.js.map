{"version":3,"sources":["components/weather/header.jsx","components/weather/weatherForm.jsx","components/weather/weatherData.jsx","components/weather/index.jsx","components/app.jsx","index.js"],"names":["Header","react_default","a","createElement","className","WeatherForm","_ref","city","countryCode","updateCity","updateCountryCode","onSubmit","type","name","placeholder","value","onChange","WeatherData","values","error","icon","src","concat","alt","temp","description","maxtemp","mintemp","humedity","wind","Weather","_useState","useState","_useState2","Object","slicedToArray","setCity","_useState3","_useState4","setCountryCode","_useState5","_useState6","setValues","_useState7","_useState8","setError","appid","process","url","useEffect","navigator","geolocation","getCurrentPosition","location","lon","coords","longitude","lat","latitude","geolocationUrl","fetchWeather","fetchWeatherDefault","console","log","asyncToGenerator","regenerator_default","mark","_callee","data","weatherObject","wrap","_context","prev","next","fetch","sent","json","updateValues","t0","stop","_x","apply","this","arguments","urlDefault","sys","country","weather","main","temp_max","temp_min","humidity","speed","Fragment","header","weatherForm","e","target","preventDefault","weatherData","App","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.198aee0c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => (\r\n     <header className=\"header\">\r\n          <h1 className=\"header__title\">Weather App - ReactJs</h1>\r\n     </header>\r\n)\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst WeatherForm = ({ city, countryCode, updateCity, updateCountryCode, onSubmit }) => (\r\n     <div className=\"weather-form\">\r\n          <form className=\"form\" onSubmit={onSubmit}>\r\n               <h2 className=\"form__title\">The weather in...</h2>\r\n               <input type=\"text\" className=\"form__input\" name=\"city\" placeholder=\"City\" value={city} onChange={updateCity} />\r\n               <input type=\"text\" className=\"form__input\" name=\"countryCode\" placeholder=\"Country code\" value={countryCode} onChange={updateCountryCode} />\r\n               <button type=\"submit\" className=\"form__btn\">Buscar</button>\r\n          </form>\r\n     </div>\r\n)\r\n\r\nexport default WeatherForm\r\n","import React from 'react'\r\n\r\nconst WeatherData = ({ values, error }) => (\r\n     <div className=\"container\">\r\n          <main className=\"weather-app\">\r\n               <div className=\"weather-app__resume\">\r\n                    <p className=\"weather-error\">{error ? 'Ha ocurrido un error, por favor verifique sus datos e intentelo de nuevo' : ''}</p>\r\n                    <h3 className=\"weather-name\">{values.name} / <span className=\"weather-code\">{values.countryCode}</span></h3>\r\n                    {values.icon\r\n                         ?\r\n                         <img src={`http://openweathermap.org/img/w/${values.icon}.png`} className=\"weather-icon\" alt=\"weather-icon\" />\r\n                         :\r\n                         <img src={`http://openweathermap.org/img/w/01d.png`} className=\"weather-icon\" alt=\"weather-icon\" />}\r\n                    <p className=\"weather-temp\">{values.temp} <span className=\"weather-temp__metric\">°C</span></p>\r\n                    <p className=\"weather-description\">{values.description}</p>\r\n               </div>\r\n               <div className=\"weather-app__data\">\r\n                    <p className=\"weather-maxmintemp\">max temp: <span className=\"weather-maxtemp\">{values.maxtemp} °C</span> / min temp: <span className=\"weather-mintemp\">{values.mintemp} °C</span></p>\r\n                    <p className=\"weather-humedity\">humedity: <span className=\"weather-humedity__value\">{values.humedity} %</span></p>\r\n                    <p className=\"weather-wind\">wind: <span className=\"weather-wind__value\">{values.wind} m/s</span></p>\r\n               </div>\r\n          </main>\r\n     </div>\r\n)\r\n\r\nexport default WeatherData\r\n","import React, { useState, useEffect } from 'react';\nimport Header from './header'\nimport WeatherForm from './weatherForm'\nimport WeatherData from './weatherData'\nimport './scss/styles.scss'\n\nconst Weather = () => {\n     const [city, setCity] = useState('')\n     const [countryCode, setCountryCode] = useState('')\n     const [values, setValues] = useState({})\n     const [error, setError] = useState(false)\n     const appid = process.env.REACT_APP_APPID\n     const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${countryCode}&appid=${appid}&units=metric`\n\n     // se ejecuta al cargar el componente:\n     useEffect(() => {\n          if (navigator.geolocation) {\n               navigator.geolocation.getCurrentPosition(location => {\n                    const lon = location.coords.longitude;\n                    const lat = location.coords.latitude;\n                    const geolocationUrl = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${appid}&units=metric`\n                    fetchWeather(geolocationUrl)\n               }, () => fetchWeatherDefault())\n          } else {\n               console.log('La geolocalizacion no es soportada en este navegador')\n               fetchWeatherDefault()\n          }\n          // eslint-disable-next-line\n     }, [])\n\n     // Se consultan los datos a la API\n     const fetchWeather = async url => {\n          try {\n               const data = await fetch(url)\n               const weatherObject = await data.json()\n               updateValues(weatherObject)\n               setError(false)\n          } catch (error) {\n               console.log('peticion fallida')\n               setError(true)\n          }\n     }\n\n     // Peticion GET por default\n     const fetchWeatherDefault = () => {\n          const urlDefault = `https://api.openweathermap.org/data/2.5/weather?q=Mexico%20City,mx&appid=${appid}&units=metric`\n          fetchWeather(urlDefault)\n     }\n\n     // Se actualizan los valores con los de la API y se guardan en el estado (values)\n     const updateValues = weatherObject => {\n          setValues({\n               name: weatherObject.name,\n               countryCode: weatherObject.sys.country,\n               description: weatherObject.weather[0].description,\n               icon: weatherObject.weather[0].icon,\n               temp: weatherObject.main.temp,\n               maxtemp: weatherObject.main.temp_max,\n               mintemp: weatherObject.main.temp_min,\n               humedity: weatherObject.main.humidity,\n               wind: weatherObject.wind.speed\n          })\n     }\n\n     // Cada cambio en el formulario, se guarda el nombre de la ciudad que ingrese el usuario\n     const updateCity = e => {\n          setCity(e.target.value)\n     }\n\n     // Cada cambio en el formulario, se guarda el nombre del codigo que ingrese el usuario\n     const updateCountryCode = e => {\n          setCountryCode(e.target.value)\n     }\n\n     // Al realizar la accion \"submit\" se realiza la consulta a la API\n     const onSubmit = (e) => {\n          e.preventDefault()\n          fetchWeather(url)\n     }\n\n     return (\n          <>\n               <Header />\n               <WeatherForm city={city} countryCode={countryCode} updateCity={updateCity} updateCountryCode={updateCountryCode} onSubmit={onSubmit} />\n               <WeatherData values={values} error={error} />\n          </>\n     )\n}\n\nexport default Weather;\n","import React from 'react'\r\nimport Weather from './weather'\r\n\r\nconst App = () => <Weather />\r\n\r\nexport default App\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './components/app'\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}